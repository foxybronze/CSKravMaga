* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  }
html {
  font-size: 15px;
  font-family: 'Roboto', sans-serif;
  padding: 10px;
  background-color: rgb(0,0,0); 
  align-content: center;
  /*black. this color could also be achieved via color: black; HSL(0,0,0) which stands for Hue, Saturation, Ligntness, or hexadecimal code #000*/
}

a:link {
  color: rgb(43,166,220); /*blue*/
  text-decoration: none;
}
a:visited {
  color: rgb(136,46,80); /*pink*/
}

/*Navigation*/

nav {
  position: fixed; /*Where is the item located? 
    static - the default
    relative - relative to where it would automatically be via static
    absolute - The item stays put, and everything else ignores its location (goes in front of/behind it depending on z score)
    fixed - makes it stay put
    sticky - this means it'll be in the flow of the document, and then, once it hits the value "top: ##px", it'll just stay there*/
  width: 100%;
  display: flex; /*this turns nav into a flex *container**/
  z-index: 10; /*this ensures that it stays in front of the rest of the website*/
  text-align: center;
  border-bottom: 3px solid white;
  background-color: rgb(0,0,0);
  top: 0px; /*(can also do bottom, left, right; it's how far it is from that edge)*/
  left: 0px;
}

nav .logo {
  display: inline-block; /*this means the element can share horizontal space with other elements. if it were set to "block" then nothing could be on the same line with it. If it were set to "inline" is usually for html text that have been stylized with <strong> for bold or <em> for italics or <a> for links, so that the text is displayed in the same line*/ 
  /*float: left; - I could use this to move this element all the way to the left, if I just wanted to put other things around it. BUT, it wouldn't allow me to put the text all the way to the right on the other side. It works with an inline-block element, though*/
  height: 45px;
  margin: 15px;
}
.navbox {
    margin: 0 auto;
    padding: 0 30px 0 0;
    display: flex;
    align-items: center;
    width: 100%;
    justify-content: space-between;
    top: 0;
}

nav ul {
  list-style: none; /*this made the navigation horizontal rather than a bullet-pointed list*/
}

nav li {
  display: inline-block; /*this let the navigation be on the same line as the logo*/
  font-size: 20px;
  padding: 7px; /*this just put space between the words*/
}

/*Main Body of the Website*/

.main {
  position: relative;
  top: 45px;
}

/* Banner*/

#banner {
  width: 100%;
  background-image: url("https://static.wixstatic.com/media/320c78_cbb0dc383fc6409885947435f88223b8~mv2.jpg/v1/fill/w_600,h_350,al_c,q_80,usm_0.66_1.00_0.01,enc_auto/CS%20Krav%20Maga%20final_070320-01.jpg");
  height: 230px; /*this has to have a height because otherwise, it'll just be as tall as the text, which will be like, 12px or something*/
  text-align: center;
  background-position: center;
  background-repeat: no-repeat;
}

.mission {
  color: white;
  font-weight: 400;
  font-size: 12px;
  position: relative;
  top: 190px; /*this is how I got the text to appear at the bottom of the banner image - it's 190px from the top of the container*/
}
 
/*Classes */

#classes {
  display: block; 
  position: relative;
  width: 100%;
 /* background-color: red;*/
  text-align: center;
  background-image: url("https://images.unsplash.com/photo-1521800641212-77d98bb90d21?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NDR8fG9mJTIwYm94aW5nJTIwZ2xvdmVzfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
}
#classes h1 {
    color: white;
    text-transform: uppercase;
    margin: 10px;
}

.classbox {
    display: flex;/*inline-flex would allow other flex containers to appear inline with each other*/
    justify-content: space-around; /*justify-content moves things along the main (horizontal) axis from left to right*/
      /*flex-start, puts things in order, left to right; 
      /*flex-end puts things in order, justified to the right side
      /*center puts them centered, in order, no space between or after
      /*space-around puts equal space before and after elements */
    align-items: flex-start; /*align-items moves things along the vertical axis, so long is there is just one row (so long as main is set to horizontal).
      /*flex-start puts everythning at the top of the container*/ 
      /*flex-end puts everything at bottom of container*/
      /*center puts things in the vertical center of a container*/
      /*baseline aligns the bottoms of everything, but not necessarily at the bottom of the container*/
      /*stretch will stretch things from the top to bottom of the container. this is the default value*/
    /*flex-grow: and flex-shrink: are properties that can be used to make items in the box grow in different proportions if needed, and flex-basis: allows you to set an element's default size before it starts shrinking or growing. You can summarize all these with the property *flex: grow shrink basis* */
      align-content: space-around;/*this aligns elements along the vertical axis, from top to bottom, if there are multiple rows of content*/
        /*space-between evenly spaces items from top to bottom*/
        /*flex-start puts all rows at the top with no extra space between*/
        /*flex-end puts all rows at the bottom, with no space between*/
        /*center puts all rows in the middle, with no spac between*/
        /*space-between puts even space between each row, but none between top and bottom*/
        /*space-around, like space-between, but with equal space around top and bottom of container*/
        /*stretch will stretch stuff to fill the container unless height is specified*/
      flex-wrap: wrap; /*this will make it so the elements will wrap if it over-flows. *nowrap* is the default, and *wrap-reverse* just reverses the order they wrap in */
      flex-direction: row; /*default value, can also do row-reverse, column, and column-reverse, which will change the behavior for all the other values in flex*/
      /*flex-direction: allows you to set the the main axis is used for the JUSTIFY-CONTENT, FLEX-WRAP, FLEX-GROW, FLEX-SHRINK. The cross-axis is used for ALIGN-ITEMS and ALIGN-CONTENT. You can set the main axis using*/
      /*flex-flow: is a shorthand that combines flex-wrap and flex-direction in one.*/
}

.class {
  width: 30%; /* each class card will be 30% of the .classbox*/
}
/* These are important image settings!!!!*/
.imgbox {
  width: 100%; /*the image container will fill 100% of its space*/
  height: 130px; /*the image can take up 130px in height*/
  overflow: hidden; /*if the image is bigger than this space, it won't show*/
}       
.imgbox img {
  max-width: 100%; /*the images will take up all the width*/
  height: auto; /*the height will automatically scale proportionally to the width*/
  display: block; /*images won't try to align with other content on the page*/
}

.class h4 {
  margin: 10px;
  color: rgb(43,166,220); /*blue*/
}

/*button!*/
.button {
  background-color: rgb(43,166,220); /*blue*/
  color: white;
  cursor: pointer;
  font-size: 2rem;
  padding: 1rem;
  border: solid 3px rgb(97,189,229);
  border-radius: 15px; /*this gives it rounded corners*/
  display: block;
  position: relative;
  clear: both; /*this means nothing can touch it on either side*/
  text-align: center;
  width: 20rem; /*width must be set in order to center an element in the page using margin*/
  margin: 2rem auto; /*sets top and bottom margins to 2rem and centers within containing element*/
  font-weight: 800;
  
}
.button:hover {
  background-color: rgb(97,189,229); /*a lighter blue*/
}
.button:active {
  color: rgb(31,144,192);
  font-weight: 900; /*a lighter blue*/
}
/*could also do .button:visited, to have it look a certain way after it's already been visited*/

/*Instructors in grid*/
#instructors {
  display: grid; /*makes a block-level grid. you can also do *inline-grid* */
  position: relative;
  width: 100%;
  /*grid-template-columns: 50% 50%; /*sets the width of the columns*/
  /*grid-template-rows: 20% 40% 40%; /*sets the height of the rows*/
  grid-template: 1fr 4fr 4fr / 1fr 1fr 1fr; /*sets the height of rows / and width of columns - this is done in place of grid-template-columns and grid-template-rows*/ /*fr is a unit that means "fractions" - it is used specifically in grid*/
  /*for grid-template sizes, you can also do *repeat(#,size)* so you don't have to write it out for a ton of fields*/
  /*you can also size grid square using minmax() for resizing purposes*/
  gap: 20px 20px; /*the first value is the gap between rows, or *row-gap*, the second is the gap between columns, or *column-gap**/
 /*grid-template area*/
 /*grid-row-start, grid-row-end*/
 /*grid-column-start, grid-column-end*/
 /*grid-area*/
 margin: 20px auto;
}

#instructors h1 {
  grid-row: 1/2; /*can also be achieved using the fields *grid-row-start* and *grid-row-end* /*start is the # of line at the top of it, end is the # of the line at the bottom of it*/
  grid-column: 1/4; /*can also be achieved using the fields *grid-column-start* and *grid-column-end* /*start is the #of line at the start, and end is the #line after it*/
  /**grid-area* will combine all the values as follows: *grid-area: grid-row-start/grid-column-start/grid-row-end/grid-column-end* */
  text-align: center;
  color: gray;
}

#instructors .spook {
  border: 2px dodgerblue solid;
  color: black;
  background-color: red;
  width: 100%;
  overflow: hidden;
  height: 200px;
  }

#instructors .spook img {
  max-width: 100%; /*the images will take up all the width*/
  height: auto; /*the height will automatically scale proportionally to the width*/
  display: block; /*images won't try to align with other content on the page*/
}

/*testimonials. a scrolling image*/
#testimonials {
  position: relative;
  display: block;
  margin: 0 auto;
  padding: 2rem;
  min-width: 200px;
  max-width: 700px;
  height: 450px;
  color: white;
  overflow: scroll; /*could also be set to *hidden*, so overflow just doesn't show up, or *visible* so you just see it pouring outside the element*/
  background-image: url("https://images.unsplash.com/photo-1555597673-b21d5c935865?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8bWFydGlhbCUyMGFydHN8ZW58MHx8MHx8&auto=format&fit=crop&w=700&q=60" );
  background-repeat: no-repeat;
  text-align: center;
}

#testimonials p {
    margin: 20px;
    text-align: justify;
    }

#contact {
  color: white;
  text-align: center;
}
